{"version":3,"sources":["services/api.js","components/Loading/styles.js","components/Loading/index.js","components/FormResult/styles.js","components/Errors/index.js","components/FormResult/index.js","components/Capitals/styles.js","components/Capitals/index.js","pages/Main/styles.js","pages/Main/index.js","styles/global.js","App.js","index.js"],"names":["api","axios","create","baseURL","interceptors","request","use","config","params","appid","lang","units","rotate","keyframes","LoadingContent","styled","div","Loading","FormResultWrapper","CityResult","OrangeRow","hr","WrapperResult","CloseButton","button","attrs","type","CityWeather","City","p","CurrentWeather","AditionalInfo","ColumnBlock","TemperatureMinMax","FeelsLike","Wind","Humidity","ForecastList","ul","ForecastItem","li","Day","DayTemperatureMinMax","ErrorWrapper","ErrorMessage","ErrorTip","metterToKmSec","metterSec","Math","round","Number","EPSILON","handleError","error","ERRORS","code","message","status","Weather","weather","data","name","sys","country","main","temp","description","temp_min","temp_max","wind","speed","feels_like","humidity","processForecastData","forecast","currentDay","startOfDay","Date","dayOfWeekMap","1","2","3","4","5","6","7","list","filter","forecastDate","isAfter","parseISO","dt_txt","getHours","forecastDay","FORECAST_RANGE","differenceInDays","checkForecastRange","map","key","getISODay","Forecast","CityInfo","handleCloseButton","onClick","FormResult","viewFormResult","cityData","VIEW_STATE_FORM_RESULT","RENDER_RESULT","RENDER_ERROR","CapitalsResults","List","RetryButton","splitCapitals","capitalsList","halfwayThrough","floor","length","slice","ListTitle","ListItems","halfCapitals","capital","id","Capitals","capitals","handleRetryButton","index","Container","props","isSmallTitle","WhiteRow","Form","form","SubmitButton","FormWrapper","section","CapitalsWrapper","Main","handleSubmit","e","a","async","preventDefault","setState","loadingCity","inputCity","state","Promise","all","get","q","response","NO_RENDER","handleInputChange","target","value","fetchCapitals","inputCapitals","capitalIdList","join","capitalsData","loadingCapitals","city","this","onSubmit","placeholder","onChange","Component","createGlobalStyle","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1a7e6795.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'http://api.openweathermap.org/data/2.5',\n});\n\n// Add a request interceptor to set appid query param to the API calls\n// its a workaround while waiting for axios PR to be aproved\n// that allows to set default params in axios.create()\napi.interceptors.request.use(config => {\n  config.params = config.params || {};\n  config.params.appid = '3f8b8ec5b63a67bd58ffe2d4029b1323';\n  config.params.lang = 'pt_br';\n  config.params.units = 'metric';\n\n  return config;\n});\n\nexport default api;\n","import styled, { keyframes } from 'styled-components';\n\n// Create button animation\nconst rotate = keyframes`\n  from {\n    transform: rotate(360deg);\n  }\n\n  to{\n    transform: rotate(0deg);\n  }\n`;\n\nexport const LoadingContent = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 10px;\n  margin: 0 auto;\n\n  font-size: 150%;\n  font-weight: 700;\n  color: #fff;\n\n  background-color: #40bfc1;\n\n  svg {\n    font-size: 150%;\n    animation: ${rotate} 2s linear infinite;\n  }\n`;\n","import React from 'react';\n\nimport { IoMdSync } from 'react-icons/io';\n\nimport { LoadingContent } from './styles';\n\nfunction Loading() {\n  return (\n    <LoadingContent>\n      <IoMdSync />\n      Carregando\n    </LoadingContent>\n  );\n}\n\nexport default Loading;\n","import styled from 'styled-components';\n\nexport const FormResultWrapper = styled.div`\n  background: #fff3e4;\n  color: #555;\n  height: auto;\n`;\n\nexport const CityResult = styled.div`\n  padding: 24px 24px 20px;\n  margin: 0 auto;\n\n  @media only screen and (max-width: 480px) {\n    padding: 20px 16px 16px 0px;\n  }\n`;\n\nexport const OrangeRow = styled.hr`\n  border: 0;\n  background: #ff8000;\n  height: 1px;\n  margin: 0 24px;\n\n  box-shadow: 0px 1px 0px #ffdbb2;\n\n  @media only screen and (max-width: 480px) {\n    margin: 0 auto;\n  }\n`;\n\n// /* Container created to position the close Button and  the CityWeather content */\nexport const WrapperResult = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: flex-start;\n`;\n\nexport const CloseButton = styled.button.attrs({\n  type: 'button',\n})`\n  border: 0;\n  background: none;\n\n  svg {\n    height: 32px;\n    width: 32px;\n\n    color: #ff8000;\n  }\n`;\n\nexport const CityWeather = styled.div`\n  margin-left: 32px;\n\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n\n  @media only screen and (max-width: 480px) {\n    margin-left: 36px;\n  }\n`;\n\nexport const City = styled.p`\n  font-size: 112.5%;\n  font-weight: 700;\n\n  @media only screen and (max-width: 480px) {\n    font-size: 75%;\n  }\n`;\n\nexport const CurrentWeather = styled.div`\n  font-size: 250%;\n  font-weight: 700;\n\n  margin: 32px 0;\n\n  span {\n    display: inline-block;\n  }\n  span:first-child {\n    margin-right: 16px;\n  }\n\n  span:first-letter {\n    text-transform: uppercase;\n  }\n\n  @media only screen and (max-width: 480px) {\n    font-size: 200%;\n  }\n`;\n\nexport const AditionalInfo = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\n\nexport const ColumnBlock = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n\n  &:last-child {\n    margin-left: 32px;\n  }\n`;\n\nexport const TemperatureMinMax = styled.div`\n  font-size: 100%;\n  font-weight: 700;\n\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n\n  div {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n  }\n\n  svg {\n    color: #ff8000;\n    height: 18px;\n    width: 18px;\n  }\n\n  @media only screen and (max-width: 480px) {\n    font-size: 75%;\n  }\n`;\nexport const FeelsLike = styled.div`\n  font-size: 100%;\n\n  p {\n    font-weight: 300;\n\n    span {\n      font-weight: 700;\n      margin-left: 8px;\n    }\n  }\n\n  p:first-letter {\n    text-transform: uppercase;\n  }\n\n  @media only screen and (max-width: 480px) {\n    font-size: 75%;\n  }\n`;\n\nexport const Wind = styled.div`\n  font-size: 100%;\n  font-weight: 300;\n  margin-top: 24px;\n\n  span {\n    font-weight: 700;\n    margin-left: 8px;\n  }\n\n  p:first-letter {\n    text-transform: uppercase;\n  }\n\n  @media only screen and (max-width: 480px) {\n    font-size: 75%;\n  }\n`;\n\nexport const Humidity = styled.div`\n  font-size: 100%;\n  margin-top: 24px;\n\n  p {\n    font-weight: 300;\n\n    span {\n      font-weight: 700;\n      margin-left: 8px;\n    }\n  }\n\n  p:first-letter {\n    text-transform: uppercase;\n  }\n\n  @media only screen and (max-width: 480px) {\n    font-size: 75%;\n  }\n`;\n\nexport const ForecastList = styled.ul`\n  list-style: none;\n\n  padding: 20px 0px;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  @media only screen and (max-width: 480px) {\n    padding: 24px 0px;\n  }\n`;\n\nexport const ForecastItem = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n\n  & + li {\n    margin-left: 24px;\n  }\n`;\n\nexport const Day = styled.p`\n  font-size: 112.5%;\n  font-weight: 700;\n\n  @media only screen and (max-width: 480px) {\n    font-size: 100%;\n  }\n`;\n\nexport const DayTemperatureMinMax = styled.p`\n  font-size: 87.5%;\n  font-weight: 700;\n  color: #ff8000;\n  margin-top: 8px;\n\n  span:last-child {\n    margin-left: 8px;\n  }\n\n  @media only screen and (max-width: 480px) {\n    font-size: 75%;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const ErrorWrapper = styled.div`\n  display: flex;\n\n  flex-direction: column;\n  align-items: center;\n\n  padding: 16px;\n`;\n\nexport const ErrorMessage = styled.div`\n  color: #000;\n  font-size: 150%;\n  font-weight: 700;\n  text-align: center;\n`;\n\nexport const ErrorTip = styled.div`\n  font-size: 100%;\n  color: #555;\n`;\n","import React from 'react';\nimport {\n  parseISO,\n  getHours,\n  getISODay,\n  isAfter,\n  startOfDay,\n  differenceInDays,\n} from 'date-fns';\nimport { IoMdClose, IoMdArrowDown, IoMdArrowUp } from 'react-icons/io';\n\nimport {\n  FormResultWrapper,\n  CityResult,\n  WrapperResult,\n  OrangeRow,\n  CloseButton,\n  CityWeather,\n  City,\n  CurrentWeather,\n  AditionalInfo,\n  ColumnBlock,\n  TemperatureMinMax,\n  FeelsLike,\n  Wind,\n  Humidity,\n  ForecastList,\n  Day,\n  ForecastItem,\n  DayTemperatureMinMax,\n} from './styles';\n\nimport { ErrorWrapper, ErrorMessage, ErrorTip } from '../Errors';\n\n/** Convert metter/sec to km/hour */\nconst metterToKmSec = metterSec =>\n  Math.round((metterSec * 3.6 + Number.EPSILON) * 100) / 100;\n\nconst handleError = error => {\n  const ERRORS = {\n    NOT_FOUND: {\n      code: 404,\n      message: 'Não foi possível localizar a cidade informada!',\n    },\n    GENERIC_ERROR: {\n      code: true,\n      message: 'Falha na requisição!',\n    },\n  };\n  switch (error.status) {\n    case ERRORS.NOT_FOUND.code:\n      return (\n        <ErrorWrapper>\n          <ErrorMessage>{ERRORS.NOT_FOUND.message}</ErrorMessage>\n          <ErrorTip>\n            <p>\n              Para melhorar a precisão da busca, realize a consulta seguindo o\n              formato definido na ISO3166:\n            </p>\n            <p>Nome da cidade + virgula + Sigla de dois dígitos do pais.</p>\n            <p>\n              <strong>Exemplo</strong>: Londres, GB ou São Paulo, BR\n            </p>\n          </ErrorTip>\n        </ErrorWrapper>\n      );\n    default:\n      return (\n        <ErrorWrapper>\n          <ErrorMessage>{ERRORS.GENERIC_ERROR.message}</ErrorMessage>\n        </ErrorWrapper>\n      );\n  }\n};\n\nfunction Weather({ weather }) {\n  return (\n    <CityWeather>\n      <City>{`${weather.data.name} - ${weather.data.sys.country}`}</City>\n\n      <CurrentWeather>\n        <span>{`${Math.round(weather.data.main.temp)}°C`}</span>\n        <span>{weather.data.weather[0].description}</span>\n      </CurrentWeather>\n\n      <AditionalInfo>\n        <ColumnBlock>\n          <TemperatureMinMax>\n            <div>\n              <IoMdArrowDown />\n              <span>{`${Math.round(weather.data.main.temp_min)}°`}</span>\n            </div>\n            <div>\n              <IoMdArrowUp />\n              <span>{`${Math.round(weather.data.main.temp_max)}°`}</span>\n            </div>\n          </TemperatureMinMax>\n\n          <Wind>\n            <p>\n              Vento\n              <span>\n                {`${Math.round(metterToKmSec(weather.data.wind.speed))}km/h`}\n              </span>\n            </p>\n          </Wind>\n        </ColumnBlock>\n\n        <ColumnBlock>\n          <FeelsLike>\n            <p>\n              Sensação\n              <span>{`${Math.round(weather.data.main.feels_like)}°C`}</span>\n            </p>\n          </FeelsLike>\n\n          <Humidity>\n            <p>\n              Humidade\n              <span>{`${Math.round(weather.data.main.humidity)}%`}</span>\n            </p>\n          </Humidity>\n        </ColumnBlock>\n      </AditionalInfo>\n    </CityWeather>\n  );\n}\n\nconst checkForecastRange = (currentDay, forecastDay, FORECAST_RANGE) =>\n  differenceInDays(forecastDay, currentDay) <= FORECAST_RANGE;\n/**\n * The openweathermap API 5 days / 3hour forecast endpoint returns\n * the forecast relative from the current local time\n * for 5 days with data every 3 hours in UTC.\n * The server measurement for a day starts at 00:00UTC, then 03:00UTC and so on.\n * Lets say it is currently 2020-01-27 01:30:00-04:00AM,\n * the API will return data from 2020-01-27 06:00:00UTC\n * to 2020-02-01 03:00:00.\n * It is necessary to ignore today's forecast,\n * resulting in 4 forecasts days (or 5, depending on the current hour).\n */\nconst processForecastData = forecast => {\n  // Use 12:00:00 UTC as default hour to show\n  const DEFAULT_HOUR = 12;\n\n  // Forecast 4 days\n  const FORECAST_RANGE = 4;\n\n  // Get current day\n  const currentDay = startOfDay(new Date());\n\n  // follow the getISODay format ( 1 for Monday, 7 for Sunday)\n  const dayOfWeekMap = {\n    1: 'Segunda',\n    2: 'Terça',\n    3: 'Quarta',\n    4: 'Quinta',\n    5: 'Sexta',\n    6: 'Sábado',\n    7: 'Domingo',\n  };\n\n  return forecast.data.list\n    .filter(\n      forecastDate =>\n        isAfter(startOfDay(parseISO(forecastDate.dt_txt)), currentDay) &&\n        getHours(parseISO(forecastDate.dt_txt)) === DEFAULT_HOUR &&\n        checkForecastRange(\n          currentDay,\n          parseISO(forecastDate.dt_txt),\n          FORECAST_RANGE\n        )\n    )\n    .map(forecastDate => {\n      return (\n        <ForecastItem key={forecastDate.dt_txt}>\n          <Day>{dayOfWeekMap[getISODay(parseISO(forecastDate.dt_txt))]}</Day>\n          <DayTemperatureMinMax>\n            <span>{`${Math.round(forecastDate.main.temp_min)}°`}</span>\n            <span>{`${Math.round(forecastDate.main.temp_max)}°`}</span>\n          </DayTemperatureMinMax>\n        </ForecastItem>\n      );\n    });\n};\n\nfunction Forecast({ forecast }) {\n  return <ForecastList>{processForecastData(forecast)}</ForecastList>;\n}\n\nfunction CityInfo({ handleCloseButton, weather, forecast }) {\n  return (\n    <>\n      <CityResult>\n        <WrapperResult>\n          <Weather weather={weather} />\n          <CloseButton onClick={handleCloseButton}>\n            <IoMdClose />\n          </CloseButton>\n        </WrapperResult>\n      </CityResult>\n\n      <OrangeRow />\n\n      <Forecast forecast={forecast} />\n    </>\n  );\n}\n\nfunction FormResult({\n  handleCloseButton,\n  viewFormResult,\n  cityData,\n  VIEW_STATE_FORM_RESULT,\n}) {\n  const { weather, forecast, error } = cityData;\n\n  return (\n    <FormResultWrapper>\n      {viewFormResult === VIEW_STATE_FORM_RESULT.RENDER_RESULT && (\n        <CityInfo\n          weather={weather}\n          forecast={forecast}\n          handleCloseButton={handleCloseButton}\n        />\n      )}\n      {viewFormResult === VIEW_STATE_FORM_RESULT.RENDER_ERROR &&\n        handleError(error)}\n    </FormResultWrapper>\n  );\n}\n\nexport default FormResult;\n","import styled from 'styled-components';\n\nexport const CapitalsResults = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n\n  @media only screen and (max-width: 480px) {\n    flex-direction: column;\n  }\n`;\n\nexport const List = styled.ul`\n  list-style: none;\n\n  & + ul {\n    margin-left: 32px;\n  }\n\n  li {\n    font-weight: 700;\n    line-height: 100%;\n\n    display: flex;\n    flex-direction: row;\n\n    /* List title */\n    &:first-child {\n      font-size: 100%;\n      font-weight: 300;\n      line-height: 100%;\n    }\n\n    &:nth-child(2) {\n      margin-top: 18px;\n    }\n\n    & + li {\n      margin-top: 30px;\n    }\n\n    span {\n      display: block;\n      width: 2rem;\n      margin-right: 1rem;\n    }\n  }\n\n  @media only screen and (max-width: 480px) {\n    & + ul {\n      margin-left: 0;\n\n      li {\n        &:first-child {\n          display: none;\n        }\n\n        &:nth-child(2) {\n          margin-top: 30px;\n        }\n\n        & + li {\n          margin-top: 30px;\n        }\n      }\n    }\n  }\n`;\n\nexport const RetryButton = styled.button`\n  border: 0;\n  border-radius: 4px;\n  padding: 8px;\n  background-color: #f0134d;\n\n  font-size: 100%;\n  color: #fff;\n  font-weight: bold;\n\n  margin-top: 16px;\n\n  display: flex;\n  align-items: center;\n\n  &:active {\n    background-color: #ff6f5e;\n  }\n\n  svg {\n    font-size: 150%;\n    margin-right: 8px;\n  }\n`;\n","import React from 'react';\n\nimport { IoMdRefresh } from 'react-icons/io';\n\nimport { ErrorWrapper, ErrorMessage } from '../Errors';\n\nimport { CapitalsResults, List, RetryButton } from './styles';\n\nconst splitCapitals = capitalsList => {\n  const halfwayThrough = Math.floor(capitalsList.length / 2);\n\n  return [\n    capitalsList.slice(0, halfwayThrough),\n    capitalsList.slice(halfwayThrough, capitalsList.length),\n  ];\n};\n\nfunction ListTitle() {\n  return (\n    <li>\n      <span>Min</span>\n      <span>Max</span>\n    </li>\n  );\n}\n\nfunction ListItems({ halfCapitals }) {\n  return halfCapitals.map(capital => (\n    <li key={capital.id}>\n      <span>{`${Math.round(capital.main.temp_min)}°`}</span>\n      <span>{`${Math.round(capital.main.temp_max)}°`}</span>\n      <p>{capital.name}</p>\n    </li>\n  ));\n}\n\nfunction Capitals({ capitals, handleRetryButton }) {\n  const REQUEST_STATE = {\n    SUCCESS_LIST_RESULT: { code: 200 },\n  };\n\n  return capitals.status === REQUEST_STATE.SUCCESS_LIST_RESULT.code ? (\n    <CapitalsResults>\n      {splitCapitals(capitals.data.list).map((halfCapitals, index) => (\n        <List key={index}>\n          <ListTitle />\n          <ListItems halfCapitals={halfCapitals} />\n        </List>\n      ))}\n    </CapitalsResults>\n  ) : (\n    <ErrorWrapper>\n      <ErrorMessage>\n        <h3>Não foi possível carregar as informações!</h3>\n      </ErrorMessage>\n      <RetryButton onClick={handleRetryButton}>\n        <IoMdRefresh />\n        Tentar novamente\n      </RetryButton>\n    </ErrorWrapper>\n  );\n}\n\nexport default Capitals;\n","import styled from 'styled-components';\n\nexport const Container = styled.main`\n  max-width: 600px;\n  margin: 0 auto 40px;\n\n  header {\n    margin: ${props =>\n      props.isSmallTitle ? '24px auto 26px' : '90px auto 50px'};\n\n    h1 {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n\n      font-size: ${props => (props.isSmallTitle ? '312.5%' : '420%')};\n      font-weight: 700;\n      color: #fff;\n    }\n  }\n\n  @media only screen and (max-width: 480px) {\n    header {\n      margin: ${props =>\n        props.isSmallTitle ? '20px 30px 20px' : '40px 50px 40px'};\n\n      h1 {\n        display: flex;\n        align-items: center;\n        justify-content: flex-start;\n\n        font-size: ${props => (props.isSmallTitle ? '125%' : '250%')};\n        font-weight: 700;\n        color: #fff;\n      }\n    }\n  }\n`;\n\nexport const WhiteRow = styled.hr`\n  border: 0;\n  background: #fff;\n  height: 1px;\n  margin: 0 auto;\n`;\n\nexport const Form = styled.form`\n  margin: ${props =>\n    props.isSmallTitle ? '20px auto 40px' : '20px auto 60px'};\n  height: 64px;\n\n  padding: 16px 16px 16px 24px;\n\n  border: 1px solid #d86c00;\n\n  background-color: #fff;\n\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n\n  input {\n    font-size: 112.5%;\n    font-weight: 300;\n\n    border: 0;\n    background: none;\n\n    flex: 1;\n  }\n\n  input::placeholder {\n    font-weight: 300;\n    font-size: 112.5%;\n  }\n\n  @media only screen and (max-width: 480px) {\n    margin: ${props =>\n      props.isSmallTitle ? '14px auto 24px' : '14px auto 24px'};\n    height: 40px;\n\n    width: 90%;\n\n    padding: 10px 18px 10px 22px;\n\n    border: 1px solid #d86c00;\n\n    background-color: #fff;\n\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: center;\n\n    input {\n      font-size: 75%;\n      font-weight: 300;\n\n      border: 0;\n      background: none;\n\n      flex: 1;\n    }\n\n    input::placeholder {\n      font-weight: 300;\n      font-size: 75%;\n    }\n  }\n`;\n\nexport const SubmitButton = styled.button.attrs({\n  type: 'submit',\n})`\n  background: none;\n  border: 0;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  svg {\n    width: 25px;\n    height: 25px;\n\n    color: #555;\n  }\n`;\n\nexport const FormWrapper = styled.section`\n  margin: 0 auto;\n  width: 90%;\n\n  @media only screen and (max-width: 480px) {\n    width: 100%;\n  }\n`;\n\nexport const CapitalsWrapper = styled.section`\n  margin: 0 auto;\n  width: 80%;\n\n  h2 {\n    font-size: 225%;\n    color: #fff;\n    font-weight: bold;\n    margin: 20px auto 18px;\n  }\n`;\n","import React, { Component } from 'react';\n\nimport { IoMdSearch } from 'react-icons/io';\n\nimport api from '../../services/api';\n\nimport Loading from '../../components/Loading';\nimport FormResult from '../../components/FormResult';\nimport Capitals from '../../components/Capitals';\n\nimport {\n  Container,\n  FormWrapper,\n  CapitalsWrapper,\n  WhiteRow,\n  SubmitButton,\n  Form,\n} from './styles';\n\nexport default class Main extends Component {\n  constructor(props) {\n    super(props);\n\n    this.VIEW_STATE_FORM_RESULT = {\n      RENDER_RESULT: 'success',\n      RENDER_ERROR: 'error',\n      NO_RENDER: null,\n    };\n\n    this.state = {\n      inputCity: '',\n      loadingCity: false,\n      viewFormResult: this.VIEW_STATE_FORM_RESULT.NO_RENDER,\n      cityData: {\n        weather: {},\n        forecast: {},\n        error: {},\n      },\n      inputCapitals: [\n        { id: '3663517', city: 'Manaus' },\n        { id: '3448439', city: 'São Paulo' },\n        { id: '3451190', city: 'Rio de Janeiro' },\n        { id: '3469058', city: 'Brasilia' },\n      ],\n      capitalsData: {\n        capitals: {},\n        error: {},\n      },\n      loadingCapitals: true,\n    };\n  }\n\n  async componentDidMount() {\n    await this.fetchCapitals();\n  }\n\n  handleSubmit = async e => {\n    e.preventDefault();\n\n    this.setState({ loadingCity: true });\n\n    const { inputCity } = this.state;\n\n    try {\n      const [weather, forecast] = await Promise.all([\n        api.get('/weather', {\n          params: {\n            q: inputCity,\n          },\n        }),\n        api.get('/forecast', {\n          params: {\n            q: inputCity,\n          },\n        }),\n      ]);\n\n      this.setState({\n        cityData: {\n          error: {},\n          weather: { ...weather },\n          forecast: { ...forecast },\n        },\n        loadingCity: false,\n        inputCity: '',\n        viewFormResult: this.VIEW_STATE_FORM_RESULT.RENDER_RESULT,\n      });\n    } catch (error) {\n      this.setState({\n        cityData: {\n          forecast: {},\n          weather: {},\n          error: { ...error.response },\n        },\n        loadingCity: false,\n        inputCity: '',\n        viewFormResult: this.VIEW_STATE_FORM_RESULT.RENDER_ERROR,\n      });\n    }\n  };\n\n  handleCloseButton = async () => {\n    this.setState({\n      cityData: {\n        weather: {},\n        forecast: {},\n        error: {},\n      },\n      viewFormResult: this.VIEW_STATE_FORM_RESULT.NO_RENDER,\n    });\n  };\n\n  handleInputChange = e => {\n    this.setState({ inputCity: e.target.value });\n  };\n\n  // Fetch capitals from the API\n  fetchCapitals = async () => {\n    const { inputCapitals } = this.state;\n\n    // Concatenate list of cities IDs separated by comma\n    const capitalIdList = inputCapitals.map(capital => capital.id).join(',');\n\n    try {\n      const response = await api.get('/group', {\n        params: {\n          id: capitalIdList,\n        },\n      });\n\n      this.setState({\n        capitalsData: { ...response },\n        loadingCapitals: false,\n      });\n    } catch (error) {\n      // Reponse outside 2xx range\n      this.setState({\n        capitalsData: { ...error },\n        loadingCapitals: false,\n      });\n    }\n  };\n\n  handleRetryButton = async () => {\n    this.setState({ loadingCapitals: true });\n    await this.fetchCapitals();\n  };\n\n  render() {\n    const {\n      inputCity,\n      loadingCity,\n      viewFormResult,\n      cityData,\n      capitalsData,\n      loadingCapitals,\n    } = this.state;\n\n    return (\n      <Container isSmallTitle={viewFormResult}>\n        <header>\n          <h1>Previsão do tempo</h1>\n        </header>\n\n        <FormWrapper>\n          {loadingCity ? (\n            <Loading />\n          ) : (\n            viewFormResult && (\n              <FormResult\n                handleCloseButton={this.handleCloseButton}\n                viewFormResult={viewFormResult}\n                cityData={cityData}\n                VIEW_STATE_FORM_RESULT={this.VIEW_STATE_FORM_RESULT}\n              />\n            )\n          )}\n\n          <Form onSubmit={this.handleSubmit} isSmallTitle={viewFormResult}>\n            <input\n              type=\"text\"\n              placeholder=\"Insira aqui o nome da cidade\"\n              value={inputCity}\n              onChange={this.handleInputChange}\n            />\n\n            <SubmitButton>\n              <IoMdSearch />\n            </SubmitButton>\n          </Form>\n        </FormWrapper>\n\n        <WhiteRow />\n\n        <CapitalsWrapper>\n          <h2>Capitais</h2>\n          {loadingCapitals ? (\n            <Loading />\n          ) : (\n            <Capitals\n              capitals={capitalsData}\n              handleRetryButton={this.handleRetryButton}\n            />\n          )}\n        </CapitalsWrapper>\n      </Container>\n    );\n  }\n}\n","import { createGlobalStyle } from 'styled-components';\n\nexport default createGlobalStyle`\n\n  @import url(\"https://fonts.googleapis.com/css?family=Roboto&display=swap\");\n\n *{\n    margin: 0;\n    padding: 0;\n    outline: 0;\n    box-sizing: border-box;\n  }\n\n  html, body, :root, #root{\n    min-height: 100%;\n    font-size: 16px;\n  }\n\n  body{\n    background: linear-gradient(#FF7F00 0%, #FFBB00 100%);\n    background-repeat: no-repeat;\n    background-attachment: fixed;\n\n    font-family: 'Roboto', Arial, Helvetica, sans-serif;\n    --webkit-font-smoothing: antialised !important;\n  }\n`;\n","import React from 'react';\n\nimport Main from './pages/Main';\nimport GlobalStyle from './styles/global';\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyle />\n      <Main />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}