{"version":3,"sources":["services/api.js","components/Loading/styles.js","components/Loading/index.js","components/FormResult/styles.js","components/Errors/index.js","components/FormResult/index.js","components/Capitals/styles.js","components/Capitals/index.js","pages/Main/styles.js","pages/Main/index.js","styles/global.js","App.js","index.js"],"names":["api","axios","create","baseURL","interceptors","request","use","config","params","key","lang","units","rotate","keyframes","LoadingContent","styled","div","Loading","FormResultWrapper","CityResult","OrangeRow","hr","WrapperResult","CloseButton","button","attrs","type","CityWeather","City","p","CurrentWeather","AditionalInfo","ColumnBlock","TemperatureMinMax","FeelsLike","Wind","Humidity","ForecastList","ul","ForecastItem","li","Day","DayTemperatureMinMax","ErrorWrapper","ErrorMessage","ErrorTip","Weather","metterSec","weather","minMaxTemperature","forecast","data","filter","forecastDay","isToday","parseISO","datetime","getTodayMinMaxTemperature","city_name","country_code","Math","round","temp","description","min_temp","max_temp","wind_spd","Number","EPSILON","app_temp","rh","processForecastData","currentDay","startOfDay","Date","dayOfWeekMap","1","2","3","4","5","6","7","forecastDate","isAfter","FORECAST_RANGE","differenceInDays","checkForecastRange","map","getISODay","Forecast","CityInfo","handleCloseButton","onClick","FormResult","viewFormResult","cityData","VIEW_STATE_FORM_RESULT","error","RENDER_RESULT","RENDER_ERROR","ERRORS","code","message","status","handleError","CapitalsResults","List","RetryButton","ListTitle","ListItems","halfCapitals","capital","Capitals","capitalsData","handleRetryButton","capitalsList","halfwayThrough","floor","length","slice","splitCapitals","capitals","index","Container","main","props","isSmallTitle","WhiteRow","Form","form","SubmitButton","FormWrapper","section","CapitalsWrapper","Main","handleSubmit","e","a","preventDefault","setState","loadingCity","inputCity","state","Promise","all","get","city","console","log","response","NO_RENDER","handleInputChange","target","value","fetchCapitals","inputCapitals","city_id","id","responseCapitals","loadingCapitals","this","onSubmit","placeholder","onChange","Component","createGlobalStyle","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.97bb3d9c.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'https://api.weatherbit.io/v2.0',\n});\n\n// Add a request interceptor to set appid query param to the API calls\n// its a workaround while waiting for axios PR to be aproved\n// that allows to set default params in axios.create()\napi.interceptors.request.use(config => {\n  config.params = config.params || {};\n  config.params.key = 'c3f2386af8424b19a51d8f67ca2b92f7';\n  config.params.lang = 'pt';\n  config.params.units = 'M';\n\n  return config;\n});\n\nexport default api;\n","import styled, { keyframes } from 'styled-components';\n\n// Create button animation\nconst rotate = keyframes`\n  from {\n    transform: rotate(360deg);\n  }\n\n  to{\n    transform: rotate(0deg);\n  }\n`;\n\nexport const LoadingContent = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 10px;\n  margin: 0 auto;\n\n  font-size: 150%;\n  font-weight: 700;\n  color: #fff;\n\n  background-color: #40bfc1;\n\n  svg {\n    font-size: 150%;\n    animation: ${rotate} 2s linear infinite;\n  }\n`;\n","import React from 'react';\n\nimport { IoMdSync } from 'react-icons/io';\n\nimport { LoadingContent } from './styles';\n\nfunction Loading() {\n  return (\n    <LoadingContent>\n      <IoMdSync />\n      Carregando\n    </LoadingContent>\n  );\n}\n\nexport default Loading;\n","import styled from 'styled-components';\n\nexport const FormResultWrapper = styled.div`\n  background: #fff3e4;\n  color: #555;\n  height: auto;\n`;\n\nexport const CityResult = styled.div`\n  padding: 24px 24px 20px;\n  margin: 0 auto;\n\n  @media only screen and (max-width: 480px) {\n    padding: 20px 16px 16px 0px;\n  }\n`;\n\nexport const OrangeRow = styled.hr`\n  border: 0;\n  background: #ff8000;\n  height: 1px;\n  margin: 0 24px;\n\n  box-shadow: 0px 1px 0px #ffdbb2;\n\n  @media only screen and (max-width: 480px) {\n    margin: 0 auto;\n  }\n`;\n\n// /* Container created to position the close Button and  the CityWeather content */\nexport const WrapperResult = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: flex-start;\n`;\n\nexport const CloseButton = styled.button.attrs({\n  type: 'button',\n})`\n  border: 0;\n  background: none;\n\n  svg {\n    height: 32px;\n    width: 32px;\n\n    color: #ff8000;\n  }\n`;\n\nexport const CityWeather = styled.div`\n  margin-left: 32px;\n\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n\n  @media only screen and (max-width: 480px) {\n    margin-left: 36px;\n  }\n`;\n\nexport const City = styled.p`\n  font-size: 112.5%;\n  font-weight: 700;\n\n  @media only screen and (max-width: 480px) {\n    font-size: 75%;\n  }\n`;\n\nexport const CurrentWeather = styled.div`\n  font-size: 250%;\n  font-weight: 700;\n\n  margin: 32px 0;\n\n  span {\n    display: inline-block;\n  }\n  span:first-child {\n    margin-right: 16px;\n  }\n\n  span:first-letter {\n    text-transform: uppercase;\n  }\n\n  @media only screen and (max-width: 480px) {\n    font-size: 200%;\n  }\n`;\n\nexport const AditionalInfo = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\n\nexport const ColumnBlock = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n\n  &:last-child {\n    margin-left: 32px;\n  }\n`;\n\nexport const TemperatureMinMax = styled.div`\n  font-size: 100%;\n  font-weight: 700;\n\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n\n  div {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n  }\n\n  svg {\n    color: #ff8000;\n    height: 18px;\n    width: 18px;\n  }\n\n  @media only screen and (max-width: 480px) {\n    font-size: 75%;\n  }\n`;\nexport const FeelsLike = styled.div`\n  font-size: 100%;\n\n  p {\n    font-weight: 300;\n\n    span {\n      font-weight: 700;\n      margin-left: 8px;\n    }\n  }\n\n  p:first-letter {\n    text-transform: uppercase;\n  }\n\n  @media only screen and (max-width: 480px) {\n    font-size: 75%;\n  }\n`;\n\nexport const Wind = styled.div`\n  font-size: 100%;\n  font-weight: 300;\n  margin-top: 24px;\n\n  span {\n    font-weight: 700;\n    margin-left: 8px;\n  }\n\n  p:first-letter {\n    text-transform: uppercase;\n  }\n\n  @media only screen and (max-width: 480px) {\n    font-size: 75%;\n  }\n`;\n\nexport const Humidity = styled.div`\n  font-size: 100%;\n  margin-top: 24px;\n\n  p {\n    font-weight: 300;\n\n    span {\n      font-weight: 700;\n      margin-left: 8px;\n    }\n  }\n\n  p:first-letter {\n    text-transform: uppercase;\n  }\n\n  @media only screen and (max-width: 480px) {\n    font-size: 75%;\n  }\n`;\n\nexport const ForecastList = styled.ul`\n  list-style: none;\n\n  padding: 20px 0px;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  @media only screen and (max-width: 480px) {\n    padding: 24px 0px;\n  }\n`;\n\nexport const ForecastItem = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n\n  & + li {\n    margin-left: 24px;\n  }\n\n  @media only screen and (max-width: 480px) {\n    :last-child {\n      display: none;\n    }\n  }\n`;\n\nexport const Day = styled.p`\n  font-size: 112.5%;\n  font-weight: 700;\n\n  @media only screen and (max-width: 480px) {\n    font-size: 100%;\n  }\n`;\n\nexport const DayTemperatureMinMax = styled.p`\n  font-size: 87.5%;\n  font-weight: 700;\n  color: #ff8000;\n  margin-top: 8px;\n\n  span:last-child {\n    margin-left: 8px;\n  }\n\n  @media only screen and (max-width: 480px) {\n    font-size: 75%;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const ErrorWrapper = styled.div`\n  display: flex;\n\n  flex-direction: column;\n  align-items: center;\n\n  padding: 16px;\n`;\n\nexport const ErrorMessage = styled.div`\n  color: #000;\n  font-size: 150%;\n  font-weight: 700;\n  text-align: center;\n`;\n\nexport const ErrorTip = styled.div`\n  font-size: 100%;\n  color: #555;\n`;\n","import React from 'react';\nimport {\n  parseISO,\n  getISODay,\n  isAfter,\n  startOfDay,\n  differenceInDays,\n  isToday,\n} from 'date-fns';\nimport { IoMdClose, IoMdArrowDown, IoMdArrowUp } from 'react-icons/io';\n\nimport {\n  FormResultWrapper,\n  CityResult,\n  WrapperResult,\n  OrangeRow,\n  CloseButton,\n  CityWeather,\n  City,\n  CurrentWeather,\n  AditionalInfo,\n  ColumnBlock,\n  TemperatureMinMax,\n  FeelsLike,\n  Wind,\n  Humidity,\n  ForecastList,\n  Day,\n  ForecastItem,\n  DayTemperatureMinMax,\n} from './styles';\n\nimport { ErrorWrapper, ErrorMessage, ErrorTip } from '../Errors';\n\n/** Convert metter/sec to km/hour */\nconst metterToKmSec = metterSec =>\n  Math.round((metterSec * 3.6 + Number.EPSILON) * 100) / 100;\n\nconst getTodayMinMaxTemperature = forecast => {\n  return forecast.data.filter(forecastDay =>\n    isToday(parseISO(forecastDay.datetime))\n  );\n};\n\nconst handleError = error => {\n  const ERRORS = {\n    NOT_FOUND: {\n      code: 404,\n      message: 'Não foi possível localizar a cidade informada!',\n    },\n    GENERIC_ERROR: {\n      code: true,\n      message: 'Falha na requisição!',\n    },\n  };\n  switch (error.status) {\n    case ERRORS.NOT_FOUND.code:\n      return (\n        <ErrorWrapper>\n          <ErrorMessage>{ERRORS.NOT_FOUND.message}</ErrorMessage>\n          <ErrorTip>\n            <p>\n              Para melhorar a precisão da busca, realize a consulta seguindo o\n              formato definido na ISO3166:\n            </p>\n            <p>Nome da cidade + virgula + Sigla de dois dígitos do pais.</p>\n            <p>\n              <strong>Exemplo</strong>: Londres, GB ou São Paulo, BR\n            </p>\n          </ErrorTip>\n        </ErrorWrapper>\n      );\n    default:\n      return (\n        <ErrorWrapper>\n          <ErrorMessage>{ERRORS.GENERIC_ERROR.message}</ErrorMessage>\n        </ErrorWrapper>\n      );\n  }\n};\n\nfunction Weather({ weather, forecast }) {\n  const minMaxTemperature = getTodayMinMaxTemperature(forecast);\n\n  return (\n    <CityWeather>\n      <City>{`${weather.data[0].city_name} - ${weather.data[0].country_code}`}</City>\n\n      <CurrentWeather>\n        <span>{`${Math.round(weather.data[0].temp)}°C`}</span>\n        <span>{weather.data[0].weather.description}</span>\n      </CurrentWeather>\n\n      <AditionalInfo>\n        <ColumnBlock>\n          <TemperatureMinMax>\n            <div>\n              <IoMdArrowDown />\n              <span>{`${Math.round(minMaxTemperature[0].min_temp)}°`}</span>\n            </div>\n            <div>\n              <IoMdArrowUp />\n              <span>{`${Math.round(minMaxTemperature[0].max_temp)}°`}</span>\n            </div>\n          </TemperatureMinMax>\n\n          <Wind>\n            <p>\n              Vento\n              <span>\n                {`${Math.round(metterToKmSec(weather.data[0].wind_spd))}km/h`}\n              </span>\n            </p>\n          </Wind>\n        </ColumnBlock>\n\n        <ColumnBlock>\n          <FeelsLike>\n            <p>\n              Sensação\n              <span>{`${Math.round(weather.data[0].app_temp)}°C`}</span>\n            </p>\n          </FeelsLike>\n\n          <Humidity>\n            <p>\n              Humidade\n              <span>{`${Math.round(weather.data[0].rh)}%`}</span>\n            </p>\n          </Humidity>\n        </ColumnBlock>\n      </AditionalInfo>\n    </CityWeather>\n  );\n}\n\n/**\n * Check if the forecast day is in the 5 days range\n */\nconst checkForecastRange = (currentDay, forecastDay, FORECAST_RANGE) =>\n  differenceInDays(forecastDay, currentDay) <= FORECAST_RANGE;\n/**\n * The openweathermap API 5 days / 3hour forecast endpoint returns\n * the forecast relative from the current local time\n * for 5 days with data every 3 hours in UTC.\n * The server measurement for a day starts at 00:00UTC, then 03:00UTC and so on.\n * Lets say it is currently 2020-01-27 01:30:00-04:00AM,\n * the API will return data from 2020-01-27 06:00:00UTC\n * to 2020-02-01 03:00:00.\n * It is necessary to ignore today's forecast,\n * resulting in 4 forecasts days (or 5, depending on the current hour).\n */\nconst processForecastData = forecast => {\n  // Forecast 4 days\n  const FORECAST_RANGE = 5;\n\n  // Get current day\n  const currentDay = startOfDay(new Date());\n\n  // follow the getISODay format ( 1 for Monday, 7 for Sunday)\n  const dayOfWeekMap = {\n    1: 'Segunda',\n    2: 'Terça',\n    3: 'Quarta',\n    4: 'Quinta',\n    5: 'Sexta',\n    6: 'Sábado',\n    7: 'Domingo',\n  };\n\n  return forecast.data\n    .filter(\n      forecastDate =>\n        isAfter(startOfDay(parseISO(forecastDate.datetime)), currentDay) &&\n        checkForecastRange(\n          currentDay,\n          parseISO(forecastDate.datetime),\n          FORECAST_RANGE\n        )\n    )\n    .map(forecastDate => {\n      return (\n        <ForecastItem key={forecastDate.datetime}>\n          <Day>{dayOfWeekMap[getISODay(parseISO(forecastDate.datetime))]}</Day>\n          <DayTemperatureMinMax>\n            <span>{`${Math.round(forecastDate.min_temp)}°`}</span>\n            <span>{`${Math.round(forecastDate.max_temp)}°`}</span>\n          </DayTemperatureMinMax>\n        </ForecastItem>\n      );\n    });\n};\n\nfunction Forecast({ forecast }) {\n  return <ForecastList>{processForecastData(forecast)}</ForecastList>;\n}\n\nfunction CityInfo({ handleCloseButton, weather, forecast }) {\n  return (\n    <>\n      <CityResult>\n        <WrapperResult>\n          <Weather weather={weather} forecast={forecast} />\n          <CloseButton onClick={handleCloseButton}>\n            <IoMdClose />\n          </CloseButton>\n        </WrapperResult>\n      </CityResult>\n\n      <OrangeRow />\n\n      <Forecast forecast={forecast} />\n    </>\n  );\n}\n\nfunction FormResult({\n  handleCloseButton,\n  viewFormResult,\n  cityData,\n  VIEW_STATE_FORM_RESULT,\n}) {\n  const { weather, forecast, error } = cityData;\n\n  return (\n    <FormResultWrapper>\n      {viewFormResult === VIEW_STATE_FORM_RESULT.RENDER_RESULT && (\n        <CityInfo\n          weather={weather}\n          forecast={forecast}\n          handleCloseButton={handleCloseButton}\n        />\n      )}\n      {viewFormResult === VIEW_STATE_FORM_RESULT.RENDER_ERROR &&\n        handleError(error)}\n    </FormResultWrapper>\n  );\n}\n\nexport default FormResult;\n","import styled from 'styled-components';\n\nexport const CapitalsResults = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n\n  @media only screen and (max-width: 480px) {\n    flex-direction: column;\n  }\n`;\n\nexport const List = styled.ul`\n  list-style: none;\n\n  & + ul {\n    margin-left: 32px;\n  }\n\n  li {\n    font-weight: 700;\n    line-height: 100%;\n\n    display: flex;\n    flex-direction: row;\n\n    /* List title */\n    &:first-child {\n      font-size: 100%;\n      font-weight: 300;\n      line-height: 100%;\n    }\n\n    &:nth-child(2) {\n      margin-top: 18px;\n    }\n\n    & + li {\n      margin-top: 30px;\n    }\n\n    span {\n      display: block;\n      width: 2rem;\n      margin-right: 1rem;\n    }\n  }\n\n  @media only screen and (max-width: 480px) {\n    & + ul {\n      margin-left: 0;\n\n      li {\n        &:first-child {\n          display: none;\n        }\n\n        &:nth-child(2) {\n          margin-top: 30px;\n        }\n\n        & + li {\n          margin-top: 30px;\n        }\n      }\n    }\n  }\n`;\n\nexport const RetryButton = styled.button`\n  border: 0;\n  border-radius: 4px;\n  padding: 8px;\n  background-color: #f0134d;\n\n  font-size: 100%;\n  color: #fff;\n  font-weight: bold;\n\n  margin-top: 16px;\n\n  display: flex;\n  align-items: center;\n\n  &:active {\n    background-color: #ff6f5e;\n  }\n\n  svg {\n    font-size: 150%;\n    margin-right: 8px;\n  }\n`;\n","import React from 'react';\n\nimport { IoMdRefresh } from 'react-icons/io';\n\nimport { ErrorWrapper, ErrorMessage } from '../Errors';\n\nimport { CapitalsResults, List, RetryButton } from './styles';\n\nconst splitCapitals = capitalsList => {\n  const halfwayThrough = Math.floor(capitalsList.length / 2);\n\n  return [\n    capitalsList.slice(0, halfwayThrough),\n    capitalsList.slice(halfwayThrough, capitalsList.length),\n  ];\n};\n\nfunction ListTitle() {\n  return (\n    <li>\n      <span>Min</span>\n      <span>Max</span>\n    </li>\n  );\n}\n\nfunction ListItems({ halfCapitals }) {\n  return halfCapitals.map(capital => (\n    <li key={capital.data.city_name}>\n      {capital.status === 200 ? (\n        <>\n          <span>{`${Math.round(capital.data.data[0].min_temp)}°`}</span>\n          <span>{`${Math.round(capital.data.data[0].max_temp)}°`}</span>\n        </>\n      ) : (\n        <>\n          <span>--</span>\n          <span>--</span>\n        </>\n      )}\n      <p>{capital.data.city_name}</p>\n    </li>\n  ));\n}\n\nfunction Capitals({ capitalsData, handleRetryButton }) {\n  return !capitalsData.error ? (\n    <CapitalsResults>\n      {splitCapitals(capitalsData.capitals).map((halfCapitals, index) => (\n        <List key={index}>\n          <ListTitle />\n          <ListItems halfCapitals={halfCapitals} />\n        </List>\n      ))}\n    </CapitalsResults>\n  ) : (\n    <ErrorWrapper>\n      <ErrorMessage>\n        <h3>Não foi possível carregar as informações!</h3>\n      </ErrorMessage>\n      <RetryButton onClick={handleRetryButton}>\n        <IoMdRefresh />\n        Tentar novamente\n      </RetryButton>\n    </ErrorWrapper>\n  );\n}\n\nexport default Capitals;\n","import styled from 'styled-components';\n\nexport const Container = styled.main`\n  max-width: 600px;\n  margin: 0 auto 40px;\n\n  header {\n    margin: ${props =>\n      props.isSmallTitle ? '24px auto 26px' : '90px auto 50px'};\n\n    h1 {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n\n      font-size: ${props => (props.isSmallTitle ? '312.5%' : '420%')};\n      font-weight: 700;\n      color: #fff;\n    }\n  }\n\n  @media only screen and (max-width: 480px) {\n    header {\n      margin: ${props =>\n        props.isSmallTitle ? '20px 30px 20px' : '40px 50px 40px'};\n\n      h1 {\n        display: flex;\n        align-items: center;\n        justify-content: flex-start;\n\n        font-size: ${props => (props.isSmallTitle ? '125%' : '250%')};\n        font-weight: 700;\n        color: #fff;\n      }\n    }\n  }\n`;\n\nexport const WhiteRow = styled.hr`\n  border: 0;\n  background: #fff;\n  height: 1px;\n  margin: 0 auto;\n`;\n\nexport const Form = styled.form`\n  margin: ${props =>\n    props.isSmallTitle ? '20px auto 40px' : '20px auto 60px'};\n  height: 64px;\n\n  padding: 16px 16px 16px 24px;\n\n  border: 1px solid #d86c00;\n\n  background-color: #fff;\n\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n\n  input {\n    font-size: 112.5%;\n    font-weight: 300;\n\n    border: 0;\n    background: none;\n\n    flex: 1;\n  }\n\n  input::placeholder {\n    font-weight: 300;\n    font-size: 112.5%;\n  }\n\n  @media only screen and (max-width: 480px) {\n    margin: ${props =>\n      props.isSmallTitle ? '14px auto 24px' : '14px auto 24px'};\n    height: 40px;\n\n    width: 90%;\n\n    padding: 10px 18px 10px 22px;\n\n    border: 1px solid #d86c00;\n\n    background-color: #fff;\n\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: center;\n\n    input {\n      font-size: 75%;\n      font-weight: 300;\n\n      border: 0;\n      background: none;\n\n      flex: 1;\n    }\n\n    input::placeholder {\n      font-weight: 300;\n      font-size: 75%;\n    }\n  }\n`;\n\nexport const SubmitButton = styled.button.attrs({\n  type: 'submit',\n})`\n  background: none;\n  border: 0;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  svg {\n    width: 25px;\n    height: 25px;\n\n    color: #555;\n  }\n`;\n\nexport const FormWrapper = styled.section`\n  margin: 0 auto;\n  width: 90%;\n\n  @media only screen and (max-width: 480px) {\n    width: 100%;\n  }\n`;\n\nexport const CapitalsWrapper = styled.section`\n  margin: 0 auto;\n  width: 80%;\n\n  h2 {\n    font-size: 225%;\n    color: #fff;\n    font-weight: bold;\n    margin: 20px auto 18px;\n  }\n`;\n","import React, { Component } from 'react';\n\nimport { IoMdSearch } from 'react-icons/io';\n\nimport api from '../../services/api';\n\nimport Loading from '../../components/Loading';\nimport FormResult from '../../components/FormResult';\nimport Capitals from '../../components/Capitals';\n\nimport {\n  Container,\n  FormWrapper,\n  CapitalsWrapper,\n  WhiteRow,\n  SubmitButton,\n  Form,\n} from './styles';\n\nexport default class Main extends Component {\n  constructor(props) {\n    super(props);\n\n    this.VIEW_STATE_FORM_RESULT = {\n      RENDER_RESULT: 'success',\n      RENDER_ERROR: 'error',\n      NO_RENDER: null,\n    };\n\n    this.state = {\n      inputCity: '',\n      loadingCity: false,\n      viewFormResult: this.VIEW_STATE_FORM_RESULT.NO_RENDER,\n      cityData: {\n        weather: {},\n        forecast: {},\n        error: {},\n      },\n      inputCapitals: [\n        { id: '3663517', city: 'Manaus' },\n        { id: '3448439', city: 'São Paulo' },\n        { id: '3451190', city: 'Rio de Janeiro' },\n        { id: '3469058', city: 'Brasilia' },\n      ],\n      capitalsData: {\n        capitals: [],\n        error: false,\n      },\n      loadingCapitals: true,\n    };\n  }\n\n  async componentDidMount() {\n    await this.fetchCapitals();\n  }\n\n  handleSubmit = async e => {\n    e.preventDefault();\n\n    this.setState({ loadingCity: true });\n\n    const { inputCity } = this.state;\n\n    try {\n      const [weather, forecast] = await Promise.all([\n        api.get('/current', {\n          params: {\n            city: inputCity,\n          },\n        }),\n        api.get('/forecast/daily', {\n          params: {\n            city: inputCity,\n          },\n        }),\n      ]);\n\n      console.log(weather, forecast);\n\n      // When the city is not found, the API returns empty response with\n      // a 204 status code (No content). It is necessary to render an error\n      // Otherwise, assume it found the city, so render the result.\n      if (weather.status === 204 && forecast.status === 204) {\n        this.setState({\n          cityData: {\n            forecast: {},\n            weather: {},\n            error: { status: 404 },\n          },\n          loadingCity: false,\n          inputCity: '',\n          viewFormResult: this.VIEW_STATE_FORM_RESULT.RENDER_ERROR,\n        });\n      } else {\n        this.setState({\n          cityData: {\n            error: {},\n            weather: weather.data,\n            forecast: forecast.data,\n          },\n          loadingCity: false,\n          inputCity: '',\n          viewFormResult: this.VIEW_STATE_FORM_RESULT.RENDER_RESULT,\n        });\n      }\n    } catch (error) {\n      this.setState({\n        cityData: {\n          forecast: {},\n          weather: {},\n          error: { ...error.response },\n        },\n        loadingCity: false,\n        inputCity: '',\n        viewFormResult: this.VIEW_STATE_FORM_RESULT.RENDER_ERROR,\n      });\n    }\n  };\n\n  handleCloseButton = async () => {\n    this.setState({\n      cityData: {\n        weather: {},\n        forecast: {},\n        error: {},\n      },\n      viewFormResult: this.VIEW_STATE_FORM_RESULT.NO_RENDER,\n    });\n  };\n\n  handleInputChange = e => {\n    this.setState({ inputCity: e.target.value });\n  };\n\n  // Fetch capitals from the API\n  fetchCapitals = async () => {\n    const { inputCapitals } = this.state;\n\n    try {\n      const responseCapitals = await Promise.all(\n        inputCapitals.map(async capital => {\n          const response = await api.get('/forecast/daily', {\n            params: {\n              city_id: capital.id,\n            },\n          });\n\n          return response;\n        })\n      );\n\n      console.log(responseCapitals);\n\n      this.setState({\n        capitalsData: { capitals: responseCapitals, error: false },\n        loadingCapitals: false,\n      });\n    } catch (error) {\n      console.log({ ...error });\n\n      this.setState({\n        capitalsData: { capitals: [], error: true },\n        loadingCapitals: false,\n      });\n    }\n  };\n\n  handleRetryButton = async () => {\n    this.setState({ loadingCapitals: true });\n    await this.fetchCapitals();\n  };\n\n  render() {\n    const {\n      inputCity,\n      loadingCity,\n      viewFormResult,\n      cityData,\n      capitalsData,\n      loadingCapitals,\n    } = this.state;\n\n    console.log(cityData);\n\n    return (\n      <Container isSmallTitle={viewFormResult}>\n        <header>\n          <h1>Previsão do tempo</h1>\n        </header>\n\n        <FormWrapper>\n          {loadingCity ? (\n            <Loading />\n          ) : (\n            viewFormResult && (\n              <FormResult\n                handleCloseButton={this.handleCloseButton}\n                viewFormResult={viewFormResult}\n                cityData={cityData}\n                VIEW_STATE_FORM_RESULT={this.VIEW_STATE_FORM_RESULT}\n              />\n            )\n          )}\n\n          <Form onSubmit={this.handleSubmit} isSmallTitle={viewFormResult}>\n            <input\n              type=\"text\"\n              placeholder=\"Insira aqui o nome da cidade\"\n              value={inputCity}\n              onChange={this.handleInputChange}\n            />\n\n            <SubmitButton>\n              <IoMdSearch />\n            </SubmitButton>\n          </Form>\n        </FormWrapper>\n\n        <WhiteRow />\n\n        <CapitalsWrapper>\n          <h2>Capitais</h2>\n          {loadingCapitals ? (\n            <Loading />\n          ) : (\n            <Capitals\n              capitalsData={capitalsData}\n              handleRetryButton={this.handleRetryButton}\n            />\n          )}\n        </CapitalsWrapper>\n      </Container>\n    );\n  }\n}\n","import { createGlobalStyle } from 'styled-components';\n\nexport default createGlobalStyle`\n\n *{\n    margin: 0;\n    padding: 0;\n    outline: 0;\n    box-sizing: border-box;\n  }\n\n  html, body, :root, #root{\n    min-height: 100%;\n    font-size: 16px;\n  }\n\n  body{\n    background: linear-gradient(#FF7F00 0%, #FFBB00 100%);\n    background-repeat: no-repeat;\n    background-attachment: fixed;\n\n    font-family: 'Roboto', Arial, Helvetica, sans-serif;\n    --webkit-font-smoothing: antialised !important;\n  }\n`;\n","import React from 'react';\n\nimport Main from './pages/Main';\nimport GlobalStyle from './styles/global';\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyle />\n      <Main />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}